
/**
 * This file is generated by genshoelace.js using the custom-elements.json file provided.
 */
import SlSelect from "@shoelace-style/shoelace/dist/components/select/select.js"
import { TemplateResult } from "lit"

import { NRO, Attrs } from "elt"
import { SlOption } from "@shoelace-style/shoelace"

export { SlSelect }
declare module "elt" {
  interface attrs_sl_select extends Attrs<HTMLElementTagNameMap["sl-select"]> {
    /** The name of the select, submitted as a name/value pair with form data. */
    name?: NRO<string>
    /** The current value of the select, submitted as a name/value pair with form data. When `multiple` is enabled, the
value attribute will be a space-delimited list of values based on the options selected, and the value property will
be an array. **For this reason, values must not contain spaces.** */
    value?: NRO<string | string[]>
    /** The select's size. */
    size?: NRO<'small' | 'medium' | 'large'>
    /** Placeholder text to show as a hint when the select is empty. */
    placeholder?: NRO<string>
    /** Allows more than one option to be selected. */
    multiple?: NRO<boolean>
    /** The maximum number of selected options to show when `multiple` is true. After the maximum, "+n" will be shown to
indicate the number of additional items that are selected. Set to 0 to remove the limit. */
    "max-options-visible"?: NRO<number>
    /** Disables the select control. */
    disabled?: NRO<boolean>
    /** Adds a clear button when the select is not empty. */
    clearable?: NRO<boolean>
    /** Indicates whether or not the select is open. You can toggle this attribute to show and hide the menu, or you can
use the `show()` and `hide()` methods and this attribute will reflect the select's open state. */
    open?: NRO<boolean>
    /** Enable this option to prevent the listbox from being clipped when the component is placed inside a container with
`overflow: auto|scroll`. Hoisting uses a fixed positioning strategy that works in many, but not all, scenarios. */
    hoist?: NRO<boolean>
    /** Draws a filled select. */
    filled?: NRO<boolean>
    /** Draws a pill-style select with rounded edges. */
    pill?: NRO<boolean>
    /** The select's label. If you need to display HTML, use the `label` slot instead. */
    label?: NRO<string>
    /** The preferred placement of the select's menu. Note that the actual placement may vary as needed to keep the listbox
inside of the viewport. */
    placement?: NRO<'top' | 'bottom'>
    /** The select's help text. If you need to display HTML, use the `help-text` slot instead. */
    "help-text"?: NRO<string>
    /** By default, form controls are associated with the nearest containing `<form>` element. This attribute allows you
to place the form control outside of a form and associate it with the form that has this `id`. The form must be in
the same document or shadow root for this to work. */
    form?: NRO<string>
    /** The select's required attribute. */
    required?: NRO<boolean>
    /** A function that customizes the tags to be rendered when multiple=true. The first argument is the option, the second
is the current tag's index.  The function should return either a Lit TemplateResult or a string containing trusted HTML of the symbol to render at
the specified value. */
    getTag?: NRO<(option: SlOption, index: number) => TemplateResult | string | HTMLElement>
  }

  interface ElementMap {
    "sl-select": attrs_sl_select
  }

}
