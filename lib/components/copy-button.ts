
/**
 * This file is generated by genshoelace.js using the custom-elements.json file provided.
 */
import SlCopyButton from "@shoelace-style/shoelace/dist/components/copy-button/copy-button.js"

import { NRO, Attrs } from "elt"

export { SlCopyButton }
declare module "elt" {
  interface attrs_sl_copy_button extends Attrs<HTMLElementTagNameMap["sl-copy-button"]> {
    /** The text value to copy. */
    value?: NRO<string>
    /** An id that references an element in the same document from which data will be copied. If both this and `value` are
present, this value will take precedence. By default, the target element's `textContent` will be copied. To copy an
attribute, append the attribute name wrapped in square brackets, e.g. `from="el[value]"`. To copy a property,
append a dot and the property name, e.g. `from="el.value"`. */
    from?: NRO<string>
    /** Disables the copy button. */
    disabled?: NRO<boolean>
    /** A custom label to show in the tooltip. */
    "copy-label"?: NRO<string>
    /** A custom label to show in the tooltip after copying. */
    "success-label"?: NRO<string>
    /** A custom label to show in the tooltip when a copy error occurs. */
    "error-label"?: NRO<string>
    /** The length of time to show feedback before restoring the default trigger. */
    "feedback-duration"?: NRO<number>
    /** The preferred placement of the tooltip. */
    "tooltip-placement"?: NRO<'top' | 'right' | 'bottom' | 'left'>
    /** Enable this option to prevent the tooltip from being clipped when the component is placed inside a container with
`overflow: auto|hidden|scroll`. Hoisting uses a fixed positioning strategy that works in many, but not all,
scenarios. */
    hoist?: NRO<boolean>
  }

  interface ElementMap {
    "sl-copy-button": attrs_sl_copy_button
  }

}
