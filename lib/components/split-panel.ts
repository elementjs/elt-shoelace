
/**
 * This file is generated by genshoelace.js using the custom-elements.json file provided.
 */
import SlSplitPanel, { SnapFunction } from "@shoelace-style/shoelace/dist/components/split-panel/split-panel.js"

import { NRO, Attrs } from "elt"

export { SlSplitPanel }
declare module "elt" {
  interface attrs_sl_split_panel extends Attrs<HTMLElementTagNameMap["sl-split-panel"]> {
    /** The current position of the divider from the primary panel's edge as a percentage 0-100. Defaults to 50% of the
container's initial size. */
    position?: NRO<number>
    /** The current position of the divider from the primary panel's edge in pixels. */
    "position-in-pixels"?: NRO<number>
    /** Draws the split panel in a vertical orientation with the start and end panels stacked. */
    vertical?: NRO<boolean>
    /** Disables resizing. Note that the position may still change as a result of resizing the host element. */
    disabled?: NRO<boolean>
    /** If no primary panel is designated, both panels will resize proportionally when the host element is resized. If a
primary panel is designated, it will maintain its size and the other panel will grow or shrink as needed when the
host element is resized. */
    primary?: NRO<'start' | 'end' | undefined>
    /** Either one or more space-separated values at which the divider should snap, in pixels, percentages, or repeat expressions e.g. `'100px 50% 500px' or `repeat(50%) 10px`,
or a function which takes in a `SnapFunctionParams`, and returns a position to snap to, e.g. `({ pos }) => Math.round(pos / 8) * 8`. */
    snap?: NRO<string | SnapFunction>
    /** How close the divider must be to a snap point until snapping occurs. */
    "snap-threshold"?: NRO<number>
  }

  interface ElementMap {
    "sl-split-panel": attrs_sl_split_panel
  }

}
